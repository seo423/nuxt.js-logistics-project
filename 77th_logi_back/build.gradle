plugins {
   id 'java'
   id 'org.springframework.boot' version '3.0.5'
   id 'io.spring.dependency-management' version '1.1.5'
}

group = 'kr.co.seoulit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
}

repositories {
   mavenCentral()
}

tasks.named('test') {
   useJUnitPlatform()
}
dependencies {

   //Spring
   implementation 'org.springframework.boot:spring-boot-starter-jdbc'
   implementation 'org.springframework.boot:spring-boot-starter-web'
   annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
   implementation 'org.springframework.boot:spring-boot-devtools'
   implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
   implementation 'org.springframework.boot:spring-boot-starter-validation'

   implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'

   //JPA
   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   implementation 'javax.servlet:javax.servlet-api:4.0.1'

   //log4j
   implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
//   implementation 'com.googlecode.log4jdbc:log4jdbc:1.2.3'

   //oracle
   implementation group: 'com.oracle.database.jdbc', name: 'ojdbc6', version: '11.2.0.4'
   implementation group: 'com.oracle.ojdbc', name: 'orai18n', version: '19.3.0.0'
   implementation group: 'com.oracle.database.jdbc', name: 'ojdbc8', version: '21.1.0.0'


   //Lombok
   compileOnly 'org.projectlombok:lombok'
   annotationProcessor 'org.projectlombok:lombok'

   implementation group: 'com.auth0', name: 'java-jwt', version: '3.8.1'
   implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.10.5'
   implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
   implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
   implementation group: 'commons-io', name: 'commons-io', version: '2.7'

   implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.10.5'
   implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.10.5'
   implementation group: 'net.sf.json-lib', name: 'json-lib-ext-spring', version: '1.0.2'

   //GSON - https://mvnrepository.com/artifact/com.google.code.gson/gson
   implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
   implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.0.Final'

   //jakarta
   implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5-jakarta'
   implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
   implementation 'org.hibernate.validator:hibernate-validator:7.0.1.Final'
   implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

   // MapStruct
   implementation 'org.mapstruct:mapstruct:1.5.3.Final'
   annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

   testImplementation 'junit:junit:4.13.1'
   testImplementation 'org.springframework.boot:spring-boot-starter-test'
   testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
   }

   //springdoc
   implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

   // mysql
//   runtimeOnly 'com.mysql:mysql-connector-j'

   // redis
   implementation 'org.springframework.boot:spring-boot-starter-data-redis'

   // springsecurity
//   implementation 'org.springframework.boot:spring-boot-starter-security'
//   implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}
